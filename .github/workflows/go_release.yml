name: Release Version
on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      file-name:
        required: true
        type: string
    secrets:
      OSS_KEY_ID:
        required: false
      OSS_KEY_SECRET:
        required: false
      GoogleID:
        required: false
      GoogleSecret:
        required: false
      DropboxKey:
        required: false
      DropboxSecret:
        required: false
      OneDriveID:
        required: false
      OneDriveSecret:
        required: false
      OneDrivePublic:
        required: false

jobs:
  goreleaser:
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies for cross-compiling
        run: |
          sudo apt update || true 
          sudo apt-get --no-install-recommends --yes install \
            upx libc6-dev-amd64-cross \
            gcc-aarch64-linux-gnu libc6-dev-arm64-cross \
            gcc-arm-linux-gnueabihf libc6-dev-armhf-cross
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Update submodule
        run: git submodule update --init --recursive
      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Get version
        id: get_version
        # run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GoogleID: ${{ secrets.GoogleID }}
          # GoogleSecret: ${{ secrets.GoogleSecret }}
          # DropboxKey: ${{ secrets.DropboxKey }}
          # DropboxSecret: ${{ secrets.DropboxSecret }}
          # OneDriveID: ${{ secrets.OneDriveID }}
          # OneDriveSecret: ${{ secrets.OneDriveSecret }}
          # OneDrivePublic: ${{ secrets.OneDrivePublic }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      # - name: Upload to oss
      #   id: upload_to_oss
      #   uses: tvrcgo/upload-to-oss@master
      #   with:
      #     key-id: ${{ secrets.OSS_KEY_ID }}
      #     key-secret: ${{ secrets.OSS_KEY_SECRET }}
      #     region: oss-cn-shanghai
      #     bucket: casaos
      #     assets: |
      #       dist/checksums.txt:/IceWhaleTech/${{inputs.project-name}}/releases/download/${{ steps.get_version.outputs.VERSION }}/checksums.txt
      #       dist/linux-arm-7-${{inputs.file-name}}-${{ steps.get_version.outputs.VERSION }}.tar.gz:/IceWhaleTech/${{inputs.project-name}}/releases/download/${{ steps.get_version.outputs.VERSION }}/linux-arm-7-${{inputs.file-name}}-${{ steps.get_version.outputs.VERSION }}.tar.gz
      #       dist/linux-arm64-${{inputs.file-name}}-${{ steps.get_version.outputs.VERSION }}.tar.gz:/IceWhaleTech/${{inputs.project-name}}/releases/download/${{ steps.get_version.outputs.VERSION }}/linux-arm64-${{inputs.file-name}}-${{ steps.get_version.outputs.VERSION }}.tar.gz
      #       dist/linux-amd64-${{inputs.file-name}}-${{ steps.get_version.outputs.VERSION }}.tar.gz:/IceWhaleTech/${{inputs.project-name}}/releases/download/${{ steps.get_version.outputs.VERSION }}/linux-amd64-${{inputs.file-name}}-${{ steps.get_version.outputs.VERSION }}.tar.gz
